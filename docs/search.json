[{"path":"/articles/CreateComplexWorkflow.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Create a composed workflow","text":"vignette explains create new pipeline Prostar framework. pipeline set data processes applied dataset (ie object class QFeatures). pipeline can associated datasets specific type. , use certain dataset restraint set possible pipelines. example, current dataset protein one, can processed protein pipeline. divided several parts: Configuration file xxx xxx","code":""},{"path":"/articles/CreateComplexWorkflow.html","id":"configuration-file","dir":"Articles","previous_headings":"","what":"Configuration file","title":"Create a composed workflow","text":"file (R/config.R) contains list named def.pipeline element definition one pipeline implemented Prostar. list one element: name item (peptide) name pipeline. important serves asa reference along code Prostar. element vector processes names specific nomenclature respected. process name begins keyword ‘module_’, followed name pipeline (‘Peptide’) ends proper name process. complete name also name file containing code process. example, file ‘module_Peptide_Normalization.R’ contains code normalization process peptides.","code":"pipeline.defs <- list(   peptide= c('module_Peptide_Filtering',              'module_Peptide_Normalization',              'module_Peptide_Imputation',              'module_Peptide_HypothesisTest')              )"},{"path":"/articles/CreateComplexWorkflow.html","id":"instanciation-of-a-pipeline","dir":"Articles","previous_headings":"","what":"Instanciation of a pipeline","title":"Create a composed workflow","text":"pipeline choosen user loads dataset (UI proposes list possible pipelines type data).type pipeline used user set variable metadata dataset. Thus, back Prostar, easy know pipeline activated. dataset loaded Prostar, subitems created menu ‘Data processing’ default, dataset loaded yet, steps disabled # Writing new process process usable Magellan R6 classes contains: * configuration process, * list screens severs (shiny) class inherits classes Magellan: core engine integrated xxx.","code":""},{"path":"/articles/CreateComplexWorkflow.html","id":"writing-a-new-pipeline","dir":"Articles","previous_headings":"","what":"Writing a new pipeline","title":"Create a composed workflow","text":"","code":"sessionInfo() #> R version 4.2.2 (2022-10-31) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.10 #>  #> Matrix products: default #> BLAS:   /home/samuel/R-4.2.2/lib/libRblas.so #> LAPACK: /home/samuel/R-4.2.2/lib/libRlapack.so #>  #> locale: #>  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               #>  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     #>  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    #>  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  #>  [9] LC_ADDRESS=C               LC_TELEPHONE=C             #> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] BiocStyle_2.26.0 #>  #> loaded via a namespace (and not attached): #>  [1] rstudioapi_0.14     knitr_1.42          magrittr_2.0.3      #>  [4] R6_2.5.1            ragg_1.2.5          rlang_1.0.6         #>  [7] fastmap_1.1.0       stringr_1.5.0       tools_4.2.2         #> [10] xfun_0.36           cli_3.6.0           jquerylib_0.1.4     #> [13] systemfonts_1.0.4   htmltools_0.5.4     yaml_2.3.7          #> [16] digest_0.6.31       rprojroot_2.0.3     lifecycle_1.0.3     #> [19] pkgdown_2.0.7       bookdown_0.32       textshaping_0.3.6   #> [22] purrr_1.0.1         BiocManager_1.30.19 vctrs_0.5.2         #> [25] sass_0.4.5          fs_1.6.0            memoise_2.0.1       #> [28] glue_1.6.2          cachem_1.0.6        evaluate_0.20       #> [31] rmarkdown_2.20      stringi_1.7.12      compiler_4.2.2      #> [34] bslib_0.4.2         desc_1.4.2          jsonlite_1.8.4"},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"/articles/CreateSimpleWorkflow.html","id":"steps","dir":"Articles","previous_headings":"Writing your own module process > Hard way","what":"Steps","title":"Writing a simple workflow","text":"Write uiOutput() function widgets corresponding reactive({}) function definition widget (widget_#name# <- reactive({}))","code":"sessionInfo() #> R version 4.2.2 (2022-10-31) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.10 #>  #> Matrix products: default #> BLAS:   /home/samuel/R-4.2.2/lib/libRblas.so #> LAPACK: /home/samuel/R-4.2.2/lib/libRlapack.so #>  #> locale: #>  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               #>  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     #>  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    #>  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  #>  [9] LC_ADDRESS=C               LC_TELEPHONE=C             #> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] BiocStyle_2.26.0 #>  #> loaded via a namespace (and not attached): #>  [1] rstudioapi_0.14     knitr_1.42          magrittr_2.0.3      #>  [4] R6_2.5.1            ragg_1.2.5          rlang_1.0.6         #>  [7] fastmap_1.1.0       stringr_1.5.0       tools_4.2.2         #> [10] xfun_0.36           cli_3.6.0           jquerylib_0.1.4     #> [13] systemfonts_1.0.4   htmltools_0.5.4     yaml_2.3.7          #> [16] digest_0.6.31       rprojroot_2.0.3     lifecycle_1.0.3     #> [19] pkgdown_2.0.7       bookdown_0.32       textshaping_0.3.6   #> [22] purrr_1.0.1         BiocManager_1.30.19 vctrs_0.5.2         #> [25] sass_0.4.5          fs_1.6.0            memoise_2.0.1       #> [28] glue_1.6.2          cachem_1.0.6        evaluate_0.20       #> [31] rmarkdown_2.20      stringi_1.7.12      compiler_4.2.2      #> [34] bslib_0.4.2         desc_1.4.2          jsonlite_1.8.4"},{"path":"/articles/useMagellanNTKForDevs.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Inside Magellan by example","text":"code Magellan two main objectives: generic handle several different types datasets, sufficiently xxx include xxx minimize code write process modules. Thus, process modules, sense, contains ui elements process logics modules. facilitates work writing process modules contraints naming conventions important. allow writing less ‘dev’ code, core Magellan mostly based function names dynamically built module processes. , respect naming conventions fundamental. package Magellan generic package offers graphical workflow manager, based Shiny modules. generic can handle different types objects must type list (see ). Magellan intimely linked data analysis modules vice-versa. facilitate development new module maintenance, volontarly want quite constraint code Module template. guarantees xxx","code":""},{"path":"/articles/useMagellanNTKForDevs.html","id":"general-principle-of-work","dir":"Articles","previous_headings":"Overview","what":"General principle of work","title":"Inside Magellan by example","text":"Magellan est en fait un module Shiny qui fait l’interface entre l’application finale et le code des processus de traitements de données. Il ne peut être lancé seul. Pour pouvoir l’utiliser, il est nécessaire d’avoir des modules (au sens Shiny) contenant les traitements de données et c’est Magellan qui va travailler avec ce module (il met en forme les interfaces à présenter à l’utilisateur) Ces modules peuvent être écrits dans un script R ou faire partie d’un package. L’important est que les fonctions ui() et server() de ces modules fassent partie du même environnement que le package Magellan Le package Magellan gère principalement deux aspects : la navigation entre les différentes interfaces graphiques (soit des étapes d’un processus de données, soit des différents processus) (Avancer, Reculer, Reset) la gestion du dataset tout au long de l’exécution du workflow: ajout des résultats de traitements suppréssion de résultats Reset de certains traitements ou reset global Ces différents aspects sont décrits dans le document utilisateur.","code":""},{"path":"/articles/useMagellanNTKForDevs.html","id":"global-architecture-how-magellan-works","dir":"Articles","previous_headings":"Overview","what":"Global architecture (How Magellan works)","title":"Inside Magellan by example","text":"Magellan run alone, always run package contains information steps manage. Global architecture connectivity Magellan, Shiny packages containing code modules. final shiny app showed Magellan, functions called shiny app. Inside Magellan, three main operations run: Magellan needs read configuration module adjust features (timelines, variables): information stored code process. first operation Magellan build name source file module load source code. specially, two infos important: configuration process, list UIs steps. loading accompanied insertion necessary code module. Certain generic functions stored Magellan let external package light easy understand possible. loading source code, functions inserted inside xxx","code":""},{"path":"/articles/useMagellanNTKForDevs.html","id":"companion-package","dir":"Articles","previous_headings":"Overview","what":"Companion package","title":"Inside Magellan by example","text":"Nous décrivons ici quelques aspects fondamentaux des fonctions ui() et server() pour les modules de traitements de données qui seront gérés par Magellan.","code":""},{"path":"/articles/useMagellanNTKForDevs.html","id":"structure-of-a-magellan-compliant-module-process","dir":"Articles","previous_headings":"Overview > Companion package","what":"Structure of a Magellan-compliant module process","title":"Inside Magellan by example","text":"Comme tout module Shiny, il doit comporter deux fonctions : ui() et server() Ces fonctions doivent avoir des noms construits de la manière suivante : 4 chaînes de caractères séparées par un ‘_’: xxx xxxx xxxx xxxx Dans l’exemple ci-dessous, il s’agit d’un module nommé ‘Process1’ et faisant partie d’un pipeline appelé ‘PipelineA’. Si le module n’pas de process parent, alors","code":"mod_process_PipelineA_Process1_ui <- function(id){   ns <- NS(id) }   mod_process_PipeA_Proc1_server <- function(id,     nav.mode = 'process',     dataIn = reactive({NULL}),     steps.enabled = reactive({NULL}),     remoteReset = reactive({FALSE}),     current.pos = reactive({1})     ){      # This list contains the basic configuration of the process     config <- list(         name = NULL,         parent = NULL,         steps = NULL,         mandatory = NULL         )        # Define default selected values for widgets     # This is only for simple workflows     widgets.default.values <- list(     # Add your own code     )      ###-------------------------------------------------------------###     ###                                                             ###     ### ------------------- MODULE SERVER --------------------------###     ###                                                             ###     ###-------------------------------------------------------------###     moduleServer(id, function(input, output, session) {         ns <- session$ns          # Insert necessary code which is hosted by Magellan         # DO NOT MODIFY THIS LINE         eval(str2expression(             SimpleWorflowCoreCode(             widgets = names(widgets.default.values),             steps = config$steps )             )         )          # Add your UI stuff below          # Insert necessary code which is hosted by Magellan         # DO NOT MODIFY THIS LINE         eval(parse(text = Module_Return_Func()))         }     ) }"},{"path":[]},{"path":"/articles/useMagellanNTKForDevs.html","id":"conventions-de-nommage","dir":"Articles","previous_headings":"Overview > Companion package","what":"Conventions de nommage","title":"Inside Magellan by example","text":"ceci est un poitn très important pour le bon fonctionnement des deux packages. En effet, comme il été précisé xxx, Magellan est un workflow manager générique qui gère des modules dont lui envoie la configuration. Afin de respecter cette généricité, Magellan construit dynamiquement un certain nombre de fonctions et de variables à partir de la configuration des process et pipelines","code":""},{"path":"/articles/useMagellanNTKForDevs.html","id":"type-of-objects","dir":"Articles","previous_headings":"","what":"Type of objects","title":"Inside Magellan by example","text":"suitable objects type list fundamental requirments : list items item named can accessed either name index exists ‘append’ function ‘Remove’ function. first one adds additional item end list (append function). last one can remove item list (even range) hope source code modules Magellan sufficient understand structured. give several additional tips better understanding. Magellan can handle different types (classes) objects based type list. manipulate objects, use R functions like [], [[]], etc… generic, types objects used modules must work basic functions. However, two functions really generic: xxx xxx(). simple (essentially wrappers existing functions) necessary. functions defined abstract Magellan. examples, Magellan implements functions simple class list. dev want write process module write code two functions class object.","code":""},{"path":"/articles/useMagellanNTKForDevs.html","id":"the-instscripts-directory","dir":"Articles","previous_headings":"Type of objects","what":"The ‘inst/scripts’ directory","title":"Inside Magellan by example","text":"‘R’ directory contains source code files. files prefixed ‘mod_’ contain shiny module. Among files ‘inst/scripts’ directory contain following files: min_simple_workflow_app_example.R: xxx min_simple_workflow_app.R: xxx test_data.R: xxx test_mod_Test_Process1.R: xxx directory ‘module_examples’ contain xxx","code":""},{"path":[]},{"path":"/articles/useMagellanNTKForDevs.html","id":"launch-a-workflow","dir":"Articles","previous_headings":"","what":"Launch a workflow","title":"Inside Magellan by example","text":"Magellan Shiny app, launch app, lines code necessary. , th minimum code launch worklfow called Proc1 belongs composed workflow called ‘PipeA’. explained minimal shiny app (code ‘/inst/scripts/min_simple_workflow_app_example.R’). comments Launch packages can see, launching shiny app shows process module pass Magellan acts bridge package: ui() server() functions app call Magellan functions. first example imortance names convention. focus id functions, one can see composed two concatenated strings : name parent name process. id splitted xxxx. string precisely name procs module source code file external package (prefixed ‘mod_’) generic script example : ‘/inst/scripts/min_simple_workflow_app.R’","code":"library(MagellanNTK)  f <- system.file(\"module_examples\",      \"example_module_PipelineA_Process1.R\",     package=\"Magellan\") source(file(f), local=TRUE)$value  ui <- fluidPage(     mod_navigation_ui('PipelineA_Process1')  server <- function(input, output){     data(feat1, package='Magellan')     rv <- reactiveValues(         dataIn = feat1,         dataOut = NULL         )        observe({         rv$dataOut <- mod_navigation_server(id = 'PipelineA_Process1',             nav.mode = 'process',             dataIn = reactive({rv$dataIn})             )     }, priority=1000) }  shinyApp(ui, server)"},{"path":"/articles/useMagellanNTKForDevs.html","id":"naming-conventions-for-modules","dir":"Articles","previous_headings":"","what":"Naming conventions for modules","title":"Inside Magellan by example","text":"Magellan heavily uses dynamically built function names (generic), naming scripts variables fundamental. module well-defined config variable contains name name parent workflow belongs . document, ‘mod_name’ refer name module (.e. Process1 example) ‘parent_name’ name parent (.e. PipelineA example). details name files variables process modules, please read manual ‘xxx’","code":""},{"path":"/articles/useMagellanNTKForDevs.html","id":"requirments","dir":"Articles","previous_headings":"","what":"Requirments","title":"Inside Magellan by example","text":"package must xxx. Two articles available explain write module simple composed workflows.","code":""},{"path":"/articles/useMagellanNTKForDevs.html","id":"specific-functions-to-write","dir":"Articles","previous_headings":"","what":"Specific functions to write","title":"Inside Magellan by example","text":"Whether class object, may necessary write code two functions generic append function named Add_Datasets_to_Object() remove function named Keep_Datasets_from_Object() functions must part external package avoid many dependancies package Magellan. developer shiny modules use Magellan can find exmaple functions implemented type list examples purpose.","code":""},{"path":"/articles/useMagellanNTKForDevs.html","id":"simple-workflow","dir":"Articles","previous_headings":"","what":"Simple workflow","title":"Inside Magellan by example","text":"vignette explains create new process Magellan framework. process set data processes applied dataset (ie object class QFeatures). hope source code well documented think good idea start article. Normally, need go deep source code write process. code module Magellan structured functions write develop module. Examples processes inst/scripts directory. tutorial aims explain step--step construction process process Magellan shiny module, comes two functions ui() server().","code":""},{"path":"/articles/useMagellanNTKForDevs.html","id":"nomenclature-of-ui-and-server-functions","dir":"Articles","previous_headings":"Simple workflow","what":"Nomenclature of ui and server functions","title":"Inside Magellan by example","text":"name functions important Magellan call functions building name dynamically. C’est pour cela qu’il est primordial de respecter la nomenclature. Chacune des deux fonctions contient quatre mots-clés séparés par ‘_’: mod:mot-clé fixe qui précise que la fonction est celle d’un module, pipeline_name: le nom du pipeline auquel le process appartient, process_name: le nom du process lui-même, ui ou server selon qu’il s’agit de la fonction ui ou server. Par example, la fonction mod_PipelineA_Process4_server() est le nom du serveur pour le process 4 du pipeline .","code":""},{"path":"/articles/useMagellanNTKForDevs.html","id":"timeline-styles","dir":"Articles","previous_headings":"Simple workflow","what":"Timeline styles","title":"Inside Magellan by example","text":"timelines coded modules. exported mod_navigation_server use . However, may interesting developer know little want customize develop another timeline. look & feel managed ui() function logics managed module server() function. server ensures different states (enabled/disabled, color style, display cursor active step) item timeline works well Despite hose information documented reference manual Magellan allows better understand works. server() function based fundamental code: parameters server vertical horizontal timelines: id: id server (id ui() function), config: list (reactiveList) containing elements process module. status: reactive vector contain status (validated, skipped undone) step process module. length equal number steps. position: reactive integer reflects position current (active) step. enabled: reactive vector length number steps indicate step enabled disabled. reactive function UpdateTags() updates vector containing tags inserted css-style.","code":"mod_timeline_v_server <- function(id,      config,      status,     position,     enabled) {      moduleServer(id, function(input, output, session) {         ns <- session$ns              UpdateTags <- reactive({...})         output$show_v_TL <- renderUI({...})     }) } sessionInfo() #> R version 4.2.2 (2022-10-31) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.10 #>  #> Matrix products: default #> BLAS:   /home/samuel/R-4.2.2/lib/libRblas.so #> LAPACK: /home/samuel/R-4.2.2/lib/libRlapack.so #>  #> locale: #>  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               #>  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     #>  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    #>  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  #>  [9] LC_ADDRESS=C               LC_TELEPHONE=C             #> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] BiocStyle_2.26.0 #>  #> loaded via a namespace (and not attached): #>  [1] rstudioapi_0.14     knitr_1.42          magrittr_2.0.3      #>  [4] R6_2.5.1            ragg_1.2.5          rlang_1.0.6         #>  [7] fastmap_1.1.0       highr_0.10          stringr_1.5.0       #> [10] tools_4.2.2         xfun_0.36           cli_3.6.0           #> [13] jquerylib_0.1.4     systemfonts_1.0.4   htmltools_0.5.4     #> [16] yaml_2.3.7          digest_0.6.31       rprojroot_2.0.3     #> [19] lifecycle_1.0.3     pkgdown_2.0.7       bookdown_0.32       #> [22] textshaping_0.3.6   purrr_1.0.1         BiocManager_1.30.19 #> [25] vctrs_0.5.2         sass_0.4.5          fs_1.6.0            #> [28] memoise_2.0.1       glue_1.6.2          cachem_1.0.6        #> [31] evaluate_0.20       rmarkdown_2.20      stringi_1.7.12      #> [34] compiler_4.2.2      bslib_0.4.2         desc_1.4.2          #> [37] jsonlite_1.8.4"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Samuel Wieczorek. Maintainer, author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wieczorek S (2023). MagellanNTK: Pipeline Manager. R package version 1.00.1, https://github.com/prostarproteomics/Magellan.","code":"@Manual{,   title = {MagellanNTK: A Pipeline Manager},   author = {Samuel Wieczorek},   year = {2023},   note = {R package version 1.00.1},   url = {https://github.com/prostarproteomics/Magellan}, }"},{"path":"/index.html","id":"magellan","dir":"","previous_headings":"","what":"A Pipeline Manager","title":"A Pipeline Manager","text":"Magellan R package proposes framework navigate steps complex data processing tool succession processes mostly chronological. example, process composed three steps, easy run first steps, second finaly last one. like dataflow manager. Moreover, navigation system, core Magellan, can used several levels. can possible define, example, super-process (.e. pipeline) step whole process containing several steps.","code":""},{"path":"/index.html","id":"list-of-articles","dir":"","previous_headings":"","what":"List of articles","title":"A Pipeline Manager","text":"menu ‘Get started’, xxxx ‘Articles > Create pipeline’: developers ‘Articles > Create process’: developers","code":""},{"path":"/index.html","id":"future-developments","dir":"","previous_headings":"","what":"Future developments","title":"A Pipeline Manager","text":"Generalize Magellan two levels, implements shiny app help users develop module process Integrate synctatic analyzers modules","code":""},{"path":"/reference/ActionOn_Child_Changed.html","id":null,"dir":"Reference","previous_headings":"","what":"xxx — ActionOn_Child_Changed","title":"xxx — ActionOn_Child_Changed","text":"# process changed","code":""},{"path":"/reference/ActionOn_Child_Changed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxx — ActionOn_Child_Changed","text":"","code":"ActionOn_Child_Changed(   temp.dataIn,   dataIn,   steps.status,   steps,   steps.enabled,   steps.skipped,   processHasChanged,   newValue )"},{"path":"/reference/ActionOn_Child_Changed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxx — ActionOn_Child_Changed","text":"temp.dataIn xxx dataIn xxx steps.status xxx steps vector names names steps process steps.enabled xxx steps.skipped xxx processHasChanged character(1) name process changed return value. newValue new value given step changed. can either NULL (process reseted) contain dataset (process validated returned result calculations)","code":""},{"path":"/reference/ActionOn_Child_Changed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xxx — ActionOn_Child_Changed","text":"NA","code":""},{"path":"/reference/ActionOn_Child_Changed.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"xxx — ActionOn_Child_Changed","text":"Samuel Wieczorek","code":""},{"path":"/reference/ActionOn_Child_Changed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xxx — ActionOn_Child_Changed","text":"","code":"NULL #> NULL"},{"path":"/reference/AllGenerics.html","id":null,"dir":"Reference","previous_headings":"","what":"Placeholder for generics functions documentation — AllGenerics","title":"Placeholder for generics functions documentation — AllGenerics","text":"Placeholder generics functions documentation","code":""},{"path":"/reference/All_Skipped_tag.html","id":null,"dir":"Reference","previous_headings":"","what":"xxx — All_Skipped_tag","title":"xxx — All_Skipped_tag","text":"xxx","code":""},{"path":"/reference/All_Skipped_tag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxx — All_Skipped_tag","text":"","code":"All_Skipped_tag(steps.status, tag)"},{"path":"/reference/All_Skipped_tag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxx — All_Skipped_tag","text":"steps.status xxx tag xxx","code":""},{"path":"/reference/All_Skipped_tag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xxx — All_Skipped_tag","text":"xxx","code":""},{"path":"/reference/All_Skipped_tag.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xxx — All_Skipped_tag","text":"","code":"NULL #> NULL"},{"path":"/reference/Build_SkippedInfoPanel.html","id":null,"dir":"Reference","previous_headings":"","what":"xxx — Build_SkippedInfoPanel","title":"xxx — Build_SkippedInfoPanel","text":"xxx","code":""},{"path":"/reference/Build_SkippedInfoPanel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxx — Build_SkippedInfoPanel","text":"","code":"Build_SkippedInfoPanel(steps.status, current.pos, config)"},{"path":"/reference/Build_SkippedInfoPanel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxx — Build_SkippedInfoPanel","text":"steps.status xxx current.pos xxx config xxx","code":""},{"path":"/reference/Build_SkippedInfoPanel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xxx — Build_SkippedInfoPanel","text":"`wellPanel`","code":""},{"path":"/reference/Build_nav_X_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Timeline UI — Build_nav_X_ui","title":"Timeline UI — Build_nav_X_ui","text":"functions display timeline UI vertical  horizontal layout","code":""},{"path":"/reference/Build_nav_X_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Timeline UI — Build_nav_X_ui","text":"","code":"DisplayWholeUI(ns, layout = \"h\")  Build_nav_v_ui(ns)  Build_nav_h_ui(ns)"},{"path":"/reference/Build_nav_X_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Timeline UI — Build_nav_X_ui","text":"ns namespace variable module called function.","code":""},{"path":"/reference/Build_nav_X_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Timeline UI — Build_nav_X_ui","text":"shiny UI","code":""},{"path":"/reference/Build_nav_X_ui.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Timeline UI — Build_nav_X_ui","text":"Samuel Wieczorek","code":""},{"path":"/reference/Build_nav_X_ui.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Timeline UI — Build_nav_X_ui","text":"","code":"NULL #> NULL"},{"path":"/reference/CheckProcessCode.html","id":null,"dir":"Reference","previous_headings":"","what":"Check source code of a module process — CheckProcessCode","title":"Check source code of a module process — CheckProcessCode","text":"Check source code process module correct","code":""},{"path":"/reference/CheckProcessCode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check source code of a module process — CheckProcessCode","text":"","code":"CheckProcessCode(sourcefile = NULL)"},{"path":"/reference/CheckProcessCode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check source code of a module process — CheckProcessCode","text":"sourcefile xxx","code":""},{"path":"/reference/CheckProcessCode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check source code of a module process — CheckProcessCode","text":"list two items: * `passed`: boolean indicates config correct . * `msg`: `character(1)` message.","code":""},{"path":"/reference/CheckProcessCode.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check source code of a module process — CheckProcessCode","text":"xxxx xxx xxxx","code":""},{"path":"/reference/CheckProcessCode.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check source code of a module process — CheckProcessCode","text":"Samuel Wieczorek","code":""},{"path":"/reference/CheckProcessCode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check source code of a module process — CheckProcessCode","text":"","code":"f <- system.file(\"extdata/module_examples\", \"example_module_PipelineA_Process1.R\",     package = \"MagellanNTK\" ) CheckProcessCode(f)"},{"path":"/reference/CheckWorkflowDir.html","id":null,"dir":"Reference","previous_headings":"","what":"Basic check workflow directory — CheckWorkflowDir","title":"Basic check workflow directory — CheckWorkflowDir","text":"function checks directory contains well-formed directories files must contains 3 directories: 'md', 'R' 'data'.  'R' directory must contains two directories: * 'workflows' contains source files workflows, * '' contains additional source files used workflows. directory  can empty. file 'R/workflows' directory, must exists *.md file filename 'md' directory. 'data' directory can empty. full description nomenclature workflows filename, please refer xxx.","code":""},{"path":"/reference/CheckWorkflowDir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Basic check workflow directory — CheckWorkflowDir","text":"","code":"CheckWorkflowDir(path)"},{"path":"/reference/CheckWorkflowDir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Basic check workflow directory — CheckWorkflowDir","text":"path `character(1)`","code":""},{"path":"/reference/CheckWorkflowDir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Basic check workflow directory — CheckWorkflowDir","text":"`boolean(1)`","code":""},{"path":"/reference/CleanSourceCode.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean source code before syntax analysis — CleanSourceCode","title":"Clean source code before syntax analysis — CleanSourceCode","text":"xxx","code":""},{"path":"/reference/CleanSourceCode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean source code before syntax analysis — CleanSourceCode","text":"","code":"CleanSourceCode(file = NULL)"},{"path":"/reference/CleanSourceCode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean source code before syntax analysis — CleanSourceCode","text":"file vector element line read source code file","code":""},{"path":"/reference/CleanSourceCode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean source code before syntax analysis — CleanSourceCode","text":"string contains source code condensed","code":""},{"path":"/reference/CleanSourceCode.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Clean source code before syntax analysis — CleanSourceCode","text":"Samuel Wieczorek","code":""},{"path":"/reference/CleanSourceCode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean source code before syntax analysis — CleanSourceCode","text":"","code":"file <- system.file(\"extdata/module_examples\", \"mod_PipelineA_Process1.R\", package = \"MagellanNTK\") CleanSourceCode(file) #> Warning: Argument 'file' is incorrect (current value is ''). #> NULL"},{"path":"/reference/Debug_Infos.html","id":null,"dir":"Reference","previous_headings":"","what":"Module debugging — Debug_Infos","title":"Module debugging — Debug_Infos","text":"shiny Module shows values datasets variables along different processes process pipeline.","code":""},{"path":"/reference/Debug_Infos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Module debugging — Debug_Infos","text":"","code":"Debug_Infos_ui(id)  Debug_Infos_server(   id,   title = NULL,   config = reactive({      NULL  }),   rv.dataIn = reactive({      NULL  }),   dataIn = reactive({      NULL  }),   dataOut = reactive({      NULL  }),   steps.enabled = reactive({      NULL  }),   steps.status = reactive({      NULL  }),   steps.skipped = reactive({      NULL  }),   current.pos = reactive({      NULL  }),   is.enabled = reactive({      NULL  }) )"},{"path":"/reference/Debug_Infos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Module debugging — Debug_Infos","text":"id xxx title title Panel contains debugging tables config instance class `Config` rv.dataIn xxx dataIn `list()` data.frames dataOut `list()` data.frames steps.enabled `logical()` xxxx steps.status `logical()` xxxx steps.skipped `logical()` xxxx current.pos `integer(1)` indice active step. .enabled `logical(1)` xxxx","code":""},{"path":"/reference/Debug_Infos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Module debugging — Debug_Infos","text":"NA","code":""},{"path":"/reference/Debug_Infos.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Module debugging — Debug_Infos","text":"","code":"#' examples/test_mod_debug_infos.R #> Error in eval(expr, envir, enclos): object 'examples' not found"},{"path":"/reference/Discover_Skipped_Steps.html","id":null,"dir":"Reference","previous_headings":"","what":"xxx — Discover_Skipped_Steps","title":"xxx — Discover_Skipped_Steps","text":"xxx","code":""},{"path":"/reference/Discover_Skipped_Steps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxx — Discover_Skipped_Steps","text":"","code":"Discover_Skipped_Steps(steps.status)"},{"path":"/reference/Discover_Skipped_Steps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxx — Discover_Skipped_Steps","text":"steps.status xxx","code":""},{"path":"/reference/Discover_Skipped_Steps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xxx — Discover_Skipped_Steps","text":"xxx","code":""},{"path":"/reference/Discover_Skipped_Steps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xxx — Discover_Skipped_Steps","text":"","code":"NULL #> NULL"},{"path":"/reference/FindClosingParenthesis.html","id":null,"dir":"Reference","previous_headings":"","what":"xxx — FindClosingParenthesis","title":"xxx — FindClosingParenthesis","text":"xxx","code":""},{"path":"/reference/FindClosingParenthesis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxx — FindClosingParenthesis","text":"","code":"FindClosingParenthesis(text, openPos)"},{"path":"/reference/FindClosingParenthesis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxx — FindClosingParenthesis","text":"text xxx openPos `integer`","code":""},{"path":"/reference/FindClosingParenthesis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xxx — FindClosingParenthesis","text":"`integer`","code":""},{"path":"/reference/FindClosingParenthesis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xxx — FindClosingParenthesis","text":"","code":"text <- \"myfunc <- function(a, b){ return (a+b)}\" posParam <- 19 FindClosingParenthesis(text, posParam) #> [1] 24"},{"path":"/reference/Found_Mod_Funcs.html","id":null,"dir":"Reference","previous_headings":"","what":"xxx — Found_Mod_Funcs","title":"xxx — Found_Mod_Funcs","text":"xxx","code":""},{"path":"/reference/Found_Mod_Funcs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxx — Found_Mod_Funcs","text":"","code":"Found_Mod_Funcs(id)"},{"path":"/reference/Found_Mod_Funcs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxx — Found_Mod_Funcs","text":"id xxx","code":""},{"path":"/reference/Found_Mod_Funcs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xxx — Found_Mod_Funcs","text":"NA","code":""},{"path":"/reference/Found_Mod_Funcs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xxx — Found_Mod_Funcs","text":"","code":"NULL #> NULL"},{"path":"/reference/GetFirstMandatoryNotValidated.html","id":null,"dir":"Reference","previous_headings":"","what":"xxx — GetFirstMandatoryNotValidated","title":"xxx — GetFirstMandatoryNotValidated","text":"xxx","code":""},{"path":"/reference/GetFirstMandatoryNotValidated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxx — GetFirstMandatoryNotValidated","text":"","code":"GetFirstMandatoryNotValidated(range, rv)"},{"path":"/reference/GetFirstMandatoryNotValidated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxx — GetFirstMandatoryNotValidated","text":"range xxx rv xxx","code":""},{"path":"/reference/GetFirstMandatoryNotValidated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xxx — GetFirstMandatoryNotValidated","text":"xxx","code":""},{"path":"/reference/GetFirstMandatoryNotValidated.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xxx — GetFirstMandatoryNotValidated","text":"","code":"NULL #> NULL"},{"path":"/reference/GetMaxValidated_AllSteps.html","id":null,"dir":"Reference","previous_headings":"","what":"xxx — GetMaxValidated_AllSteps","title":"xxx — GetMaxValidated_AllSteps","text":"xxx","code":""},{"path":"/reference/GetMaxValidated_AllSteps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxx — GetMaxValidated_AllSteps","text":"","code":"GetMaxValidated_AllSteps(steps.status)"},{"path":"/reference/GetMaxValidated_AllSteps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxx — GetMaxValidated_AllSteps","text":"steps.status vector strings item status step. length vector number steps.","code":""},{"path":"/reference/GetMaxValidated_AllSteps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xxx — GetMaxValidated_AllSteps","text":"`integer(1)`","code":""},{"path":"/reference/GetMaxValidated_AllSteps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xxx — GetMaxValidated_AllSteps","text":"","code":"NULL #> NULL"},{"path":"/reference/GetMaxValidated_BeforePos.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the last validated step before current position. — GetMaxValidated_BeforePos","title":"Get the last validated step before current position. — GetMaxValidated_BeforePos","text":"function returns indice last validated step current step.","code":""},{"path":"/reference/GetMaxValidated_BeforePos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the last validated step before current position. — GetMaxValidated_BeforePos","text":"","code":"GetMaxValidated_BeforePos(pos = NULL, rv)"},{"path":"/reference/GetMaxValidated_BeforePos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the last validated step before current position. — GetMaxValidated_BeforePos","text":"pos `integer(1)` indice active position. rv `list()` stores reactiveValues()","code":""},{"path":"/reference/GetMaxValidated_BeforePos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the last validated step before current position. — GetMaxValidated_BeforePos","text":"`integer(1)`","code":""},{"path":"/reference/GetMaxValidated_BeforePos.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the last validated step before current position. — GetMaxValidated_BeforePos","text":"#' @title xxx #' #' @description Encapsulates UI steps <div> tag able #' manage hide/show commands applied div rether #' ui. #' #' @param ns xxx #' @param id xxx #' @param config xxx #' #' @return `renderUI` function #' #' @examples NULL #'  #' @export #' Build_EncapsulateScreens_ui <- function(ns, id, config)      len <- length(config@ll.UI)     (rv.core$mode == 'dev')       cat ('Entering Build_EncapsulateScreens_ui()')       show(config)    renderUI(         tagList(             lapply(seq_len(len), function()                  (== 1)                      div(                         id = ns(names(config@steps)[]),                         class = paste0(\"page_\", id),                         config@ll.UI[[]]                     )                  else                      shinyjs::hidden(                         div(                             id = ns(names(config@steps)[]),                             class = paste0(\"page_\", id),                             config@ll.UI[[]]                         )                     )            )         )     )","code":""},{"path":"/reference/GetMaxValidated_BeforePos.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the last validated step before current position. — GetMaxValidated_BeforePos","text":"","code":"NULL #> NULL"},{"path":"/reference/GetStringStatus.html","id":null,"dir":"Reference","previous_headings":"","what":"Status to string — GetStringStatus","title":"Status to string — GetStringStatus","text":"Converts status code (intefer) readable string.","code":""},{"path":"/reference/GetStringStatus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Status to string — GetStringStatus","text":"","code":"GetStringStatus(i, title.style = FALSE)"},{"path":"/reference/GetStringStatus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Status to string — GetStringStatus","text":"xxx title.style xxx","code":""},{"path":"/reference/GetStringStatus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Status to string — GetStringStatus","text":"xxx","code":""},{"path":"/reference/GetStringStatus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Status to string — GetStringStatus","text":"","code":"GetStringStatus(1) #> [1] \"VALIDATED\""},{"path":"/reference/GetValuesFromChildren.html","id":null,"dir":"Reference","previous_headings":"","what":"xxxx — GetValuesFromChildren","title":"xxxx — GetValuesFromChildren","text":"xxx","code":""},{"path":"/reference/GetValuesFromChildren.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxxx — GetValuesFromChildren","text":"","code":"GetValuesFromChildren(config, tmp.return)"},{"path":"/reference/GetValuesFromChildren.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxxx — GetValuesFromChildren","text":"config xxxx tmp.return xxx","code":""},{"path":"/reference/GetValuesFromChildren.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xxxx — GetValuesFromChildren","text":"NA","code":""},{"path":"/reference/GetValuesFromChildren.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xxxx — GetValuesFromChildren","text":"","code":"NA #> [1] NA"},{"path":"/reference/GlobalSettings.html","id":null,"dir":"Reference","previous_headings":"","what":"xxx — GlobalSettings","title":"xxx — GlobalSettings","text":"xxx","code":""},{"path":"/reference/GlobalSettings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxx — GlobalSettings","text":"","code":"GlobalSettings"},{"path":"/reference/GlobalSettings.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"xxx — GlobalSettings","text":"object class list length 9.","code":""},{"path":"/reference/LoadCode.html","id":null,"dir":"Reference","previous_headings":"","what":"Load workflows functions — LoadCode","title":"Load workflows functions — LoadCode","text":"function xx","code":""},{"path":"/reference/LoadCode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load workflows functions — LoadCode","text":"","code":"LoadCode(name, path, recursive = FALSE)"},{"path":"/reference/LoadCode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load workflows functions — LoadCode","text":"name `character()` indicate name workflow. can either single string (represents workflow without parent) two strings separated '_' (case, workflow parent  workflow). path `character()` indicate directory find source files workflows. directory must also contains 'md' directory contains md files corresponding workflows.","code":""},{"path":"/reference/LoadCode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load workflows functions — LoadCode","text":"","code":".path <- system.file('extdata/module_examples', package='MagellanNTK')  .name <- 'PipelineA_Process1' LoadCode(name = .name, path = .path)  .path <- system.file('extdata/module_examples', package='MagellanNTK') .name <- 'PipelineA' LoadCode(name = .name, path = .path)"},{"path":"/reference/Load_Dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Load dataset shiny module — Load_Dataset","title":"Load dataset shiny module — Load_Dataset","text":"shiny Module load dataset.","code":""},{"path":"/reference/Load_Dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load dataset shiny module — Load_Dataset","text":"","code":"mod_load_workflow_ui(id)  mod_load_workflow_server(   id,   path = reactive({      NULL  }),   mode = reactive({      \"user\"  }) )"},{"path":"/reference/Load_Dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load dataset shiny module — Load_Dataset","text":"id xxx","code":""},{"path":"/reference/Load_Dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load dataset shiny module — Load_Dataset","text":"xxxxx","code":""},{"path":"/reference/Load_Dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load dataset shiny module — Load_Dataset","text":"","code":"#if (interactive()){    library(shiny)   options(shiny.fullstacktrace = TRUE)         ui <- fluidPage(     mod_openfile_ui(\"demo\")   ) #> Error in mod_openfile_ui(\"demo\"): could not find function \"mod_openfile_ui\"      server <- function(input, output, session) {     data(data_na)     mod_openfile_server(\"demo\", path = reactive({NULL}))   }      shinyApp(ui, server) #> Error in force(ui): object 'ui' not found #}"},{"path":"/reference/NavPage.html","id":null,"dir":"Reference","previous_headings":"","what":"xxx — NavPage","title":"xxx — NavPage","text":"xxx","code":""},{"path":"/reference/NavPage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxx — NavPage","text":"","code":"NavPage(direction, current.pos, len)"},{"path":"/reference/NavPage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxx — NavPage","text":"direction `integer(1)` direction xxx: forward ('1'), backwards ('-1'). current.pos `integer(1)` current position. len `integer(1)` number steps process.","code":""},{"path":"/reference/NavPage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xxx — NavPage","text":"`integer(1)` new current position.","code":""},{"path":"/reference/NavPage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xxx — NavPage","text":"","code":"NavPage(1, 3, 5) #> [1] 4"},{"path":"/reference/PrepareData2Send.html","id":null,"dir":"Reference","previous_headings":"","what":"xxxx — PrepareData2Send","title":"xxxx — PrepareData2Send","text":"xxx","code":""},{"path":"/reference/PrepareData2Send.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxxx — PrepareData2Send","text":"","code":"PrepareData2Send(rv, pos, mode)"},{"path":"/reference/PrepareData2Send.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxxx — PrepareData2Send","text":"rv xxxx pos xxx mode xxx","code":""},{"path":"/reference/PrepareData2Send.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xxxx — PrepareData2Send","text":"NA","code":""},{"path":"/reference/PrepareData2Send.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xxxx — PrepareData2Send","text":"","code":"NULL #> NULL"},{"path":"/reference/ResetChildren.html","id":null,"dir":"Reference","previous_headings":"","what":"xxxx — ResetChildren","title":"xxxx — ResetChildren","text":"xxx","code":""},{"path":"/reference/ResetChildren.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxxx — ResetChildren","text":"","code":"ResetChildren(range, resetChildren)"},{"path":"/reference/ResetChildren.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxxx — ResetChildren","text":"range xxxx resetChildren xxx","code":""},{"path":"/reference/ResetChildren.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xxxx — ResetChildren","text":"NA","code":""},{"path":"/reference/ResetChildren.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xxxx — ResetChildren","text":"","code":"NULL #> NULL"},{"path":"/reference/Save_Dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Load dataset shiny module — Save_Dataset","title":"Load dataset shiny module — Save_Dataset","text":"shiny Module load dataset.","code":""},{"path":"/reference/Save_Dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load dataset shiny module — Save_Dataset","text":"","code":"Save_Dataset_ui(id)  Save_Dataset_server(id, data)"},{"path":"/reference/Save_Dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load dataset shiny module — Save_Dataset","text":"id xxx data xxx","code":""},{"path":"/reference/Save_Dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load dataset shiny module — Save_Dataset","text":"xxxxx","code":""},{"path":"/reference/Save_Object.html","id":null,"dir":"Reference","previous_headings":"","what":"Save an R object. — Save_Object","title":"Save an R object. — Save_Object","text":"function saves R object '.rda' file.","code":""},{"path":"/reference/Save_Object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save an R object. — Save_Object","text":"","code":"Save_Object(object, file)"},{"path":"/reference/Save_Object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save an R object. — Save_Object","text":"object xxx file `characte(1)` naming file save object.","code":""},{"path":"/reference/Save_Object.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save an R object. — Save_Object","text":"NA","code":""},{"path":"/reference/Save_Object.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save an R object. — Save_Object","text":"","code":"data(data1) Save_Object(data1, 'foo.rda') unlink('foo.rda')"},{"path":"/reference/Timestamp.html","id":null,"dir":"Reference","previous_headings":"","what":"Timestamp in UNIX format. — Timestamp","title":"Timestamp in UNIX format. — Timestamp","text":"Returns date time timestamp UNIX format.","code":""},{"path":"/reference/Timestamp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Timestamp in UNIX format. — Timestamp","text":"","code":"Timestamp()"},{"path":"/reference/Timestamp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Timestamp in UNIX format. — Timestamp","text":"`integer()`.","code":""},{"path":"/reference/Timestamp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Timestamp in UNIX format. — Timestamp","text":"","code":"Timestamp() #> [1] 1676002557"},{"path":"/reference/ToggleState_NavBtns.html","id":null,"dir":"Reference","previous_headings":"","what":"xxx — ToggleState_NavBtns","title":"xxx — ToggleState_NavBtns","text":"xxx","code":""},{"path":"/reference/ToggleState_NavBtns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxx — ToggleState_NavBtns","text":"","code":"ToggleState_NavBtns(current.pos, nSteps)"},{"path":"/reference/ToggleState_NavBtns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxx — ToggleState_NavBtns","text":"current.pos xxx nSteps xxx","code":""},{"path":"/reference/ToggleState_NavBtns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xxx — ToggleState_NavBtns","text":"NA","code":""},{"path":"/reference/ToggleState_NavBtns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xxx — ToggleState_NavBtns","text":"","code":"library(shinyjs) #>  #> Attaching package: ‘shinyjs’ #> The following object is masked from ‘package:shiny’: #>  #>     runExample #> The following objects are masked from ‘package:methods’: #>  #>     removeClass, show if (interactive()) {     ui <- shiny::fluidPage()      server <- function(input, output, session) {          ToggleState_NavBtns(2, 4)          }     shiny::shinyApp(ui = ui, server = server) }"},{"path":"/reference/ToggleState_ResetBtn.html","id":null,"dir":"Reference","previous_headings":"","what":"xxx — ToggleState_ResetBtn","title":"xxx — ToggleState_ResetBtn","text":"xxx","code":""},{"path":"/reference/ToggleState_ResetBtn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxx — ToggleState_ResetBtn","text":"","code":"ToggleState_ResetBtn(cond)"},{"path":"/reference/ToggleState_ResetBtn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxx — ToggleState_ResetBtn","text":"cond xxx","code":""},{"path":"/reference/ToggleState_ResetBtn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xxx — ToggleState_ResetBtn","text":"NA","code":""},{"path":"/reference/ToggleState_ResetBtn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xxx — ToggleState_ResetBtn","text":"","code":"library(shinyjs) if (interactive()) {     ui <- shiny::fluidPage()     server <- function(input, output, session) {          ToggleState_ResetBtn(FALSE)          }     shiny::shinyApp(ui = ui, server = server) }"},{"path":"/reference/ToggleState_Screens.html","id":null,"dir":"Reference","previous_headings":"","what":"xxx — ToggleState_Screens","title":"xxx — ToggleState_Screens","text":"Updates status steps range","code":""},{"path":"/reference/ToggleState_Screens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxx — ToggleState_Screens","text":"","code":"ToggleState_Screens(cond, range, is.enabled, rv)"},{"path":"/reference/ToggleState_Screens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxx — ToggleState_Screens","text":"cond xxx range xxx .enabled xxx rv xxx","code":""},{"path":"/reference/ToggleState_Screens.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xxx — ToggleState_Screens","text":"xxx","code":""},{"path":"/reference/ToggleState_Screens.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xxx — ToggleState_Screens","text":"","code":"library(shinyjs) if (interactive()) {     ui <- shiny::fluidPage()     server <- function(input, output, session) {         rv <- reactiveValues(         steps.status = c(TRUE, TRUE, FALSE))         observe({ToggleState_Screens(FALSE, c(1,2), TRUE, rv)})          }     shiny::shinyApp(ui = ui, server = server) }"},{"path":"/reference/Update_Data2send_Vector.html","id":null,"dir":"Reference","previous_headings":"","what":"xxxx — Update_Data2send_Vector","title":"xxxx — Update_Data2send_Vector","text":"xxx","code":""},{"path":"/reference/Update_Data2send_Vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxxx — Update_Data2send_Vector","text":"","code":"Update_Data2send_Vector(rv)"},{"path":"/reference/Update_Data2send_Vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxxx — Update_Data2send_Vector","text":"rv xxxx","code":""},{"path":"/reference/Update_Data2send_Vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xxxx — Update_Data2send_Vector","text":"NA","code":""},{"path":"/reference/Update_Data2send_Vector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xxxx — Update_Data2send_Vector","text":"","code":"NA #> [1] NA"},{"path":"/reference/Update_State_Screens.html","id":null,"dir":"Reference","previous_headings":"","what":"xxx — Update_State_Screens","title":"xxx — Update_State_Screens","text":"xxx","code":""},{"path":"/reference/Update_State_Screens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxx — Update_State_Screens","text":"","code":"Update_State_Screens(is.skipped, is.enabled, rv)"},{"path":"/reference/Update_State_Screens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxx — Update_State_Screens","text":".skipped xxx .enabled xxx rv xxx","code":""},{"path":"/reference/Update_State_Screens.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xxx — Update_State_Screens","text":"NA","code":""},{"path":"/reference/Update_State_Screens.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xxx — Update_State_Screens","text":"","code":"NA #> [1] NA"},{"path":"/reference/Upload_Object.html","id":null,"dir":"Reference","previous_headings":"","what":"xxx — Upload_Object","title":"xxx — Upload_Object","text":"xxx","code":""},{"path":"/reference/Upload_Object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxx — Upload_Object","text":"","code":"Upload_Object(file)"},{"path":"/reference/Upload_Object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxx — Upload_Object","text":"file xxx","code":""},{"path":"/reference/Upload_Object.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xxx — Upload_Object","text":"NA","code":""},{"path":"/reference/bsmodal.html","id":null,"dir":"Reference","previous_headings":"","what":"Predefined modal — bsmodal_ui","title":"Predefined modal — bsmodal_ui","text":"Displays formatted modal-dialog 'Cancel'  'Ok' buttons. Displays formatted modal-dialog 'Cancel'  'Ok' buttons.","code":""},{"path":"/reference/bsmodal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predefined modal — bsmodal_ui","text":"","code":"bsmodal_ui(id)  bsmodal_server(id, title = NULL, width = NULL, uiContent = NULL)  apModal_ui(id)  apModal_server(id, title = NULL, width = NULL, uiContent = NULL)"},{"path":"/reference/bsmodal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predefined modal — bsmodal_ui","text":"id `character(1)` id instance module title `character(1)` width `character(1)` indicating size modal window. Can  \"s\" small (default), \"m\" medium, \"l\" large. uiContent content modal dialog.","code":""},{"path":"/reference/bsmodal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predefined modal — bsmodal_ui","text":"Shiny modal-dialog Shiny modal-dialog","code":""},{"path":"/reference/bsmodal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predefined modal — bsmodal_ui","text":"","code":"if (interactive()) {     library(shiny)     library(shinyBS)      ui <- fluidPage(         bsmodal_ui(\"tbl\")     )     server <- function(input, output) {         bsmodal_server(             id = \"tbl\",             title = \"test\",             uiContent = p(\"test\")         )}     shinyApp(ui, server) }  if (interactive()) {     library(shiny)     library(shinyBS)      ui <- fluidPage(         bsmodal_ui(\"tbl\")     )     server <- function(input, output) {         bsmodal_server(             id = \"tbl\",             title = \"test\",             uiContent = p(\"test\")         )}     shinyApp(ui, server) }"},{"path":"/reference/config.html","id":null,"dir":"Reference","previous_headings":"","what":"Config class definition — Config","title":"Config class definition — Config","text":"class used store configuration process used MagellanNTK contains validity function ensure format correct. Validity: * first step must called 'Description', mandatory step. Thus,  first item mandatory vector TRUE. continued... ## Initialization  ### Generic process generic process  * Generic pipeline : xxxx  * Description pipeline: case process -called 'Description'   first process module pipeline Wrapper function constructor class","code":""},{"path":"/reference/config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Config class definition — Config","text":"","code":"xxx  # S4 method for Config initialize(.Object, fullname, mode, steps, mandatory)  Config(fullname = \"\", mode = \"\", steps = \"\", mandatory = \"\")"},{"path":"/reference/config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Config class definition — Config","text":"fullname xxx mode xxx steps xxx mandatory xxx .Object xxx object xxx","code":""},{"path":"/reference/config.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Config class definition — Config","text":"fullname xxxx name xxx parent xxx mode xxx steps xxx mandatory xxx ll.UI xxx steps.source.file xxx","code":""},{"path":"/reference/config.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Config class definition — Config","text":"","code":"# Example of a generic process generic.proc <- Config(   fullname = 'PipelineA_Process1',   mode = 'process',   steps = c('Step 1', 'Step 2'),   mandatory = c(TRUE, FALSE)   )   # Example of a generic pipeline generic.pipe <- Config(   fullname = 'Pipe1_PipelineA',   mode = 'pipeline',   steps = c('Process 1', 'Process 2'),   mandatory = c(TRUE, FALSE)   )  # Example of a root pipeline (process has no parent) root.pipe <- Config(   mode = 'pipeline',   fullname = 'PipelineA',   steps = c('Process1', 'Process2', 'Process3'),   mandatory = c(FALSE, FALSE, TRUE) )   # Example of a description module (process has no steps) description.process <- Config(   fullname = 'PipelineA_Description',   mode = 'process',   steps = '',   mandatory = '' )   generic.proc #> \t ------- Config ------- #> \tfullname: PipelineA_Process1 #> \tname: Process1 #> \tparent: PipelineA #> \tmode: process #> \tnames(steps): Description Step1 Step2 Save #> \tsteps: Description Step 1 Step 2 Save #> \tmandatory: TRUE TRUE FALSE TRUE #> \tnames(ll.UI):  #> \tll.UI:  #>  generic.pipe #> \t ------- Config ------- #> \tfullname: Pipe1_PipelineA #> \tname: PipelineA #> \tparent: Pipe1 #> \tmode: pipeline #> \tnames(steps): Description Process1 Process2 #> \tsteps: Description Process 1 Process 2 #> \tmandatory: TRUE TRUE FALSE #> \tnames(ll.UI):  #> \tll.UI:  #>  root.pipe #> \t ------- Config ------- #> \tfullname: PipelineA #> \tname: PipelineA #> \tparent:  #> \tmode: pipeline #> \tnames(steps): Description Process1 Process2 Process3 #> \tsteps: Description Process1 Process2 Process3 #> \tmandatory: TRUE FALSE FALSE TRUE #> \tnames(ll.UI):  #> \tll.UI:  #>  description.process #> \t ------- Config ------- #> \tfullname: PipelineA_Description #> \tname: Description #> \tparent: PipelineA #> \tmode: process #> \tnames(steps): Description #> \tsteps: Description #> \tmandatory: TRUE #> \tnames(ll.UI):  #> \tll.UI:  #>"},{"path":"/reference/dataModal.html","id":null,"dir":"Reference","previous_headings":"","what":"xxx — dataModal","title":"xxx — dataModal","text":"xxx","code":""},{"path":"/reference/dataModal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxx — dataModal","text":"","code":"dataModal(ns, mode)"},{"path":"/reference/dataModal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxx — dataModal","text":"ns xxx mode xxx","code":""},{"path":"/reference/dataModal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"xxx — dataModal","text":"tag div ui","code":""},{"path":"/reference/dataModal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"xxx — dataModal","text":"","code":"NULL #> NULL"},{"path":"/reference/dataset-processing.html","id":null,"dir":"Reference","previous_headings":"","what":"Datasets processing — dataset-processing","title":"Datasets processing — dataset-processing","text":"manual page describes manipulation methods using [list] objects.  index name `` can specified define array (name index) operate. following functions currently available: - `Keep_Datasets_from_Object(object, range)` keep datasets object range - `Add_Datasets_to_Object(object, dataset, name)` add 'dataset'  object (type list) - `Save(object, file)` stores object .RData file","code":""},{"path":"/reference/dataset-processing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Datasets processing — dataset-processing","text":"","code":"# S4 method for `NULL` Keep_Datasets_from_Object(object, range)  # S4 method for list Keep_Datasets_from_Object(object, range)  # S4 method for `NULL` Add_Datasets_to_Object(object, dataset, name)  # S4 method for list Add_Datasets_to_Object(object, dataset, name)"},{"path":"/reference/dataset-processing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Datasets processing — dataset-processing","text":"object object class `list`. range xxxx dataset `character(1)` providing base respect logarithms computed. Default log2. name `character(1)` naming new array name.","code":""},{"path":"/reference/dataset-processing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Datasets processing — dataset-processing","text":"processed object class `object`.","code":""},{"path":"/reference/dataset-processing.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Datasets processing — dataset-processing","text":"object must type list. Thetwo functions implemented  package uses MagellanNTK","code":""},{"path":"/reference/dataset-processing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Datasets processing — dataset-processing","text":"","code":"NA #> [1] NA"},{"path":"/reference/datasets.html","id":null,"dir":"Reference","previous_headings":"","what":"data1 dataset — datasets","title":"data1 dataset — datasets","text":"xxx xxx","code":""},{"path":"/reference/datasets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"data1 dataset — datasets","text":"","code":"data(data1)  data(data_na)"},{"path":"/reference/datasets.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"data1 dataset — datasets","text":"object class `list()` object class `list()`","code":""},{"path":"/reference/default_plugin.html","id":null,"dir":"Reference","previous_headings":"","what":"xxxx — default_plugin","title":"xxxx — default_plugin","text":"xx","code":""},{"path":"/reference/default_plugin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxxx — default_plugin","text":"","code":"default_openfile_ui(id)  default_openfile_server(   id,   path = reactive({      NULL  }) )  default_EDA_ui(id)  default_EDA_server(id, object)  default_export_ui(id)  default_export_server(id, object)"},{"path":"/reference/default_plugin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxxx — default_plugin","text":"id xxxx path xxx","code":""},{"path":"/reference/default_pos.html","id":null,"dir":"Reference","previous_headings":"","what":"xxx — default_pos","title":"xxx — default_pos","text":"xxx","code":""},{"path":"/reference/default_pos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxx — default_pos","text":"","code":"default_pos"},{"path":"/reference/default_pos.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"xxx — default_pos","text":"object class list length 3.","code":""},{"path":"/reference/dl.html","id":null,"dir":"Reference","previous_headings":"","what":"mod_dl — dl","title":"mod_dl — dl","text":"shiny Module.","code":""},{"path":"/reference/dl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mod_dl — dl","text":"","code":"dl_ui(id)  dl_server(   id,   dataIn = reactive({      NULL  }),   extension = reactive({      \"csv\"  }),   widget.type = reactive({      \"Link\"  }),   name = reactive({      \"foo\"  }),   excel.style = reactive({      NULL  }) )"},{"path":"/reference/dl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mod_dl — dl","text":"id internal dataIn internal extension Available values `csv` (default), `RData` `Excel`. widget.type Available values `Button` `Link` (default). name internal excel.style xxx","code":""},{"path":"/reference/dl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"mod_dl — dl","text":"NA","code":""},{"path":"/reference/dl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"mod_dl — dl","text":"","code":"if (interactive()){   library(shinyjqui)   library(DT)   library(shinyjs)   library(shiny)   options(shiny.fullstacktrace = TRUE)   data(data_na)      ui <- fluidPage(     dl_ui(\"dl\")   )      server <- function(input, output, session) {          dl_server(       id = \"dl\",       dataIn = reactive({data_na$array1}),       name = reactive({'foo'}),       extension = reactive({c('Excel', 'csv', 'RData')}),       widget.type = reactive({c('Link', 'Button', 'Link')})     )   }      shinyApp(ui, server) }"},{"path":"/reference/example_workflow.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny example module `Process` — run_workflow","title":"Shiny example module `Process` — run_workflow","text":"module contains configuration information corresponding  pipeline. called nav_pipeline module package MagellanNTK documentation developers want create  pipelines processes managed `MagellanNTK`.","code":""},{"path":"/reference/example_workflow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny example module `Process` — run_workflow","text":"","code":"run_workflow(id, dataIn = NULL, tl.layout = NULL, path = NULL)"},{"path":"/reference/example_workflow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny example module `Process` — run_workflow","text":"id xxx tl.layout Additional parameters nav path path directory source code files  processes pipelines","code":""},{"path":"/reference/example_workflow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shiny example module `Process` — run_workflow","text":"NA","code":""},{"path":"/reference/example_workflow.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Shiny example module `Process` — run_workflow","text":"Samuel Wieczorek","code":""},{"path":"/reference/example_workflow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shiny example module `Process` — run_workflow","text":"","code":"if (interactive()) {   data(data_na)      path <- system.file(\"extdata/module_examples\", package = \"MagellanNTK\")     run_workflow(\"PipelineA_Process1\", dataIn = NULL, path = path)      run_workflow(\"PipelineA\", dataIn = data_na, path = path, tl.layout = c(\"v\", \"h\"))          run_workflow(\"PipelineB\", path = path, tl.layout = c(\"v\", \"h\")) }"},{"path":"/reference/format_DT.html","id":null,"dir":"Reference","previous_headings":"","what":"format_DT_ui and format_DT_server — format_DT","title":"format_DT_ui and format_DT_server — format_DT","text":"shiny Module. shiny Module.","code":""},{"path":"/reference/format_DT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"format_DT_ui and format_DT_server — format_DT","text":"","code":"mod_shinyTree_ui(id)  mod_shinyTree_server(id, path)  format_DT_ui(id)  format_DT_server(   id,   data,   withDLBtns = FALSE,   showRownames = FALSE,   dom = \"Bt\",   hc_style = reactive({      NULL  }),   full_style = reactive({      NULL  }),   filename = \"Prostar_export\",   hideCols = reactive({      NULL  }) )"},{"path":"/reference/format_DT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"format_DT_ui and format_DT_server — format_DT","text":"id shiny id showRownames xxxx dom xxx filename xxx input internal output internal session internal withBtns xxx style list four items: * cols: vector colnames columns show, * vals: vector colnames columns contain values, * unique: unique(conds), * pal: RColorBrewer::brewer.pal(3, \"Dark2\")[seq_len(2)]","code":""},{"path":"/reference/format_DT.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"format_DT_ui and format_DT_server — format_DT","text":"","code":"if (interactive()){ library(shinyjqui) library(DT) library(shinyjs) library(shiny)   options(shiny.fullstacktrace = TRUE) data(data_na)  ui <- fluidPage(   tagList(     format_DT_ui(\"dt_demo_nocolor\"),     br(),br(),br(),     format_DT_ui(\"dt_demo_NA_colored\"),     br(),br(),br(),     format_DT_ui(\"dt_demo_virtual_cols\")   ) )  server <- function(input, output, session) {    # Example 1   # # Show raw table   format_DT_server(\"dt_demo_nocolor\",     data = reactive({data_na$array1})   )    # Example 2   # Colorize NA values    .hc_style2 <- list(     cols = colnames(data_na$array1),     vals = colnames(data_na$array1),     unique = c(NA),     pal = 'lightgrey'   )      .full_style2 <- data_na$array1   .full_style2[] <- 'white'   .full_style2[is.na(data_na$array1)] <- 'orange'      format_DT_server(\"dt_demo_NA_colored\",     data = reactive({data_na$array1}),     withDLBtns = TRUE,     hc_style = reactive({.hc_style2}),     full_style = reactive({.full_style2})   )     #   # # Example 3   # # Compute values, store them in virtual columns and   # # compute colors based on these virtual values   # # Colorize cells wether their value is greater of lower than 10   virtual_cols <- data_na$array1 < 10   colnames(virtual_cols) <- paste0('virt_', colnames(data_na$array1))   df <- cbind(data_na$array1, virtual_cols)    .hc_style3 <- list(     cols = colnames(df)[1:(ncol(df)/2)],     vals = colnames(df)[(1+(ncol(df) / 2)):ncol(df)],     unique = c(0,1),     pal = c('orange', 'lightblue')   )    .full_style3 <- data_na$array1   .full_style3[] <- 'white'   .full_style3[data_na$array1 < 10] <- 'lightblue'   .full_style3[data_na$array1 >= 10] <- 'orange'     format_DT_server(\"dt_demo_virtual_cols\",     data = reactive({df}),     withDLBtns = TRUE,     hc_style = reactive({.hc_style3}),     full_style = reactive({.full_style3}),     hideCols = reactive({(1+((ncol(df)) / 2)):(ncol(df))})   ) }  shinyApp(ui, server) }  if (interactive()){ library(shinyjqui) library(DT) library(shinyjs) library(shiny)   options(shiny.fullstacktrace = TRUE) data(data_na)  ui <- fluidPage(   tagList(     format_DT_ui(\"dt_demo_nocolor\"),     br(),br(),br(),     format_DT_ui(\"dt_demo_NA_colored\"),     br(),br(),br(),     format_DT_ui(\"dt_demo_virtual_cols\")   ) )  server <- function(input, output, session) {    # Example 1   # # Show raw table   format_DT_server(\"dt_demo_nocolor\",     data = reactive({data_na$array1})   )    # Example 2   # Colorize NA values    .hc_style2 <- list(     cols = colnames(data_na$array1),     vals = colnames(data_na$array1),     unique = c(NA),     pal = 'lightgrey'   )      .full_style2 <- data_na$array1   .full_style2[] <- 'white'   .full_style2[is.na(data_na$array1)] <- 'orange'      format_DT_server(\"dt_demo_NA_colored\",     data = reactive({data_na$array1}),     withDLBtns = TRUE,     hc_style = reactive({.hc_style2}),     full_style = reactive({.full_style2})   )     #   # # Example 3   # # Compute values, store them in virtual columns and   # # compute colors based on these virtual values   # # Colorize cells wether their value is greater of lower than 10   virtual_cols <- data_na$array1 < 10   colnames(virtual_cols) <- paste0('virt_', colnames(data_na$array1))   df <- cbind(data_na$array1, virtual_cols)    .hc_style3 <- list(     cols = colnames(df)[1:(ncol(df)/2)],     vals = colnames(df)[(1+(ncol(df) / 2)):ncol(df)],     unique = c(0,1),     pal = c('orange', 'lightblue')   )    .full_style3 <- data_na$array1   .full_style3[] <- 'white'   .full_style3[data_na$array1 < 10] <- 'lightblue'   .full_style3[data_na$array1 >= 10] <- 'orange'     format_DT_server(\"dt_demo_virtual_cols\",     data = reactive({df}),     withDLBtns = TRUE,     hc_style = reactive({.hc_style3}),     full_style = reactive({.full_style3}),     hideCols = reactive({(1+((ncol(df)) / 2)):(ncol(df))})   ) }  shinyApp(ui, server) }"},{"path":"/reference/global.html","id":null,"dir":"Reference","previous_headings":"","what":"xxx — global","title":"xxx — global","text":"xxx","code":""},{"path":"/reference/global.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxx — global","text":"","code":"global"},{"path":"/reference/global.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"xxx — global","text":"object class list length 3.","code":""},{"path":"/reference/insertCodeForExternalModules.html","id":null,"dir":"Reference","previous_headings":"","what":"R code to update the 'config' variable of a process module — insertCodeForExternalModules","title":"R code to update the 'config' variable of a process module — insertCodeForExternalModules","text":"function generates necessary code modify variable 'config' (slots steps mandatory). adds 'Description' step TRUE value beginning 'steps' 'mandatory'  list, erases white spaces names steps. function generates necessary code modify variable 'config' (slots steps mandatory). adds 'Description' step TRUE value beginning 'steps' 'mandatory'  list, erases white spaces names steps. function create source code needed inside module declare reactive variable called 'widgets.default.values'. # Declaration variables contain values widgets avoid confusion, first string name step second name widget function create source code needed inside module declare reactive variable called 'rv.custom.default.values'. # Declaration variables contain values user variables. avoid confusion, first string name step second name widget function xxx # Generate dynamically observeEvent function widget function createxxx Returned value process xxx function xxx # Generate dynamically observeEvent function widget function xxx # Generate dynamically observeEvent function widget function xxx # Generate dynamically observeEvent function widget function xxx # Generate dynamically observeEvent function widget","code":""},{"path":"/reference/insertCodeForExternalModules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R code to update the 'config' variable of a process module — insertCodeForExternalModules","text":"","code":"Get_Code_Update_Config_Variable()  Get_Code_Declare_widgets(widgets.names = NULL)  Get_Code_Declare_rv_custom(rv.custom.names = NULL)  Get_Code_for_ObserveEvent_widgets(widgets.names = NULL)  Get_Code_for_rv_reactiveValues()  Get_Code_for_dataOut()  Get_Code_for_General_observeEvents()  Module_Return_Func()  Get_Workflow_Core_Code(   mode = NULL,   name = NULL,   w.names = NULL,   rv.custom.names = NULL )  Get_AdditionalModule_Core_Code(w.names = NULL, rv.custom.names = NULL)  Get_Code_for_AddMod_observeEvents()"},{"path":"/reference/insertCodeForExternalModules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R code to update the 'config' variable of a process module — insertCodeForExternalModules","text":"widgets.names `list` containing names widgets steps module. rv.custom.names xxx w.names xxx","code":""},{"path":"/reference/insertCodeForExternalModules.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"R code to update the 'config' variable of a process module — insertCodeForExternalModules","text":"`string` containing R code NA NA NA `string` containing R code NA NA NA NA NA NA","code":""},{"path":"/reference/insertCodeForExternalModules.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"R code to update the 'config' variable of a process module — insertCodeForExternalModules","text":"Samuel Wieczorek","code":""},{"path":"/reference/insertCodeForExternalModules.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R code to update the 'config' variable of a process module — insertCodeForExternalModules","text":"","code":"Get_Code_Update_Config_Variable() #> [1] \"\\n    config@steps <- setNames(config@steps,\\n        nm = gsub(' ', '', config@steps, fixed = TRUE))\\n\\n\\n    \"  widgets <- paste0(\"widget\", 1:3) Get_Code_Declare_widgets(widgets) #> [1] \"rv.widgets <- reactiveValues(\\n\\twidget1 = widgets.default.values$widget1,\\n\\twidget2 = widgets.default.values$widget2,\\n\\twidget3 = widgets.default.values$widget3\\n)\\n\\n\"  custom <- list(foo1 = list(), foo2 = 3) Get_Code_Declare_rv_custom(names(custom)) #> [1] \"rv.custom <- reactiveValues(\\n\\tfoo1 = rv.custom.default.values$foo1,\\n\\tfoo2 = rv.custom.default.values$foo2\\n)\\n\\n\"  widgets <- paste0(\"widget\", 1:3) Get_Code_for_ObserveEvent_widgets(widgets) #> [1] \"observeEvent(input$widget1, {\\n    rv.widgets$widget1 <- input$widget1})\\nobserveEvent(input$widget2, {\\n    rv.widgets$widget2 <- input$widget2})\\nobserveEvent(input$widget3, {\\n    rv.widgets$widget3 <- input$widget3})\\n\\n\\n\"  Get_Code_for_rv_reactiveValues() #> [1] \"rv <- reactiveValues(\\n    # Stores the object given in input of the process\\n    dataIn = NULL,\\n    # A vector of boolean indicating the status (UNDONE, SKIPPED or VALIDATED)\\n    # of the steps\\n    steps.status = NULL,\\n    # xxx\\n    reset = NULL,\\n    # A vector of boolean indicating if the steps are enabled or disabled\\n    steps.enabled = NULL\\n  )\\n\\n    \"  Get_Code_for_dataOut() #> [1] \"dataOut <- reactiveValues(\\n                trigger = NULL,\\n                value = NULL\\n                )\\n\\n\"  Get_Code_for_General_observeEvents() #> [1] \"observeEvent(steps.enabled(), ignoreNULL = TRUE, {\\n    if (is.null(steps.enabled()))\\n        rv$steps.enabled <- setNames(rep(FALSE, rv$length),\\n                                 nm = names(rv$config@steps))\\n    else\\n        rv$steps.enabled <- steps.enabled()\\n})\\n\\nobserveEvent(steps.status(), ignoreNULL = TRUE, {\\n    if (is.null(steps.enabled()))\\n        rv$steps.status <- setNames(rep(global$UNDONE, rv$length),\\n                                 nm = names(rv$config@steps))\\n    else\\n        rv$steps.status <- steps.status()\\n})\\n\\nobserveEvent(remoteReset(), {\\n      lapply(names(rv.widgets), function(x){\\n          rv.widgets[[x]] <- widgets.default.values[[x]]\\n        })\\n})\\n\\n\\n\"  Module_Return_Func() #> [1] \"# Return value of module\\n# DO NOT MODIFY THIS PART\\nlist(config = reactive({config}),\\ndataOut = reactive({dataOut})\\n)\\n\\n\\n\"  id <- 'PipelineA_Process1' widgets <- c('widget1', 'widget2') custom <- list(foo1 = list(), foo2 = 3) Get_Workflow_Core_Code('process', id, widgets, names(custom)) #> [1] \"\\n\\nconfig <- PipelineA_Process1_conf()\\nconfig@ll.UI <- setNames(\\n      lapply(\\n        names(config@steps),\\n        function(x){\\n          do.call(\\\"uiOutput\\\", list(ns(x)))\\n        }\\n      ), nm = paste0(\\\"screen_\\\", names(config@steps))\\n    )\\n\\nrv.widgets <- reactiveValues(\\n\\twidget1 = widgets.default.values$widget1,\\n\\twidget2 = widgets.default.values$widget2\\n)\\n\\nobserveEvent(input$widget1, {\\n    rv.widgets$widget1 <- input$widget1})\\nobserveEvent(input$widget2, {\\n    rv.widgets$widget2 <- input$widget2})\\n\\n\\nrv <- reactiveValues(\\n    # Stores the object given in input of the process\\n    dataIn = NULL,\\n    # A vector of boolean indicating the status (UNDONE, SKIPPED or VALIDATED)\\n    # of the steps\\n    steps.status = NULL,\\n    # xxx\\n    reset = NULL,\\n    # A vector of boolean indicating if the steps are enabled or disabled\\n    steps.enabled = NULL\\n  )\\n\\n    rv.custom <- reactiveValues(\\n\\tfoo1 = rv.custom.default.values$foo1,\\n\\tfoo2 = rv.custom.default.values$foo2\\n)\\n\\ndataOut <- reactiveValues(\\n                trigger = NULL,\\n                value = NULL\\n                )\\n\\nobserveEvent(steps.enabled(), ignoreNULL = TRUE, {\\n    if (is.null(steps.enabled()))\\n        rv$steps.enabled <- setNames(rep(FALSE, rv$length),\\n                                 nm = names(rv$config@steps))\\n    else\\n        rv$steps.enabled <- steps.enabled()\\n})\\n\\nobserveEvent(steps.status(), ignoreNULL = TRUE, {\\n    if (is.null(steps.enabled()))\\n        rv$steps.status <- setNames(rep(global$UNDONE, rv$length),\\n                                 nm = names(rv$config@steps))\\n    else\\n        rv$steps.status <- steps.status()\\n})\\n\\nobserveEvent(remoteReset(), {\\n      lapply(names(rv.widgets), function(x){\\n          rv.widgets[[x]] <- widgets.default.values[[x]]\\n        })\\n})\\n\\n\\n\\n\"  widgets <- c('widget1', 'widget2') Get_AdditionalModule_Core_Code(widgets) #> [1] \"rv.widgets <- reactiveValues(\\n\\twidget1 = widgets.default.values$widget1,\\n\\twidget2 = widgets.default.values$widget2\\n)\\n\\nobserveEvent(input$widget1, {\\n    rv.widgets$widget1 <- input$widget1})\\nobserveEvent(input$widget2, {\\n    rv.widgets$widget2 <- input$widget2})\\n\\n\\nrv <- reactiveValues(\\n    # Stores the object given in input of the process\\n    dataIn = NULL,\\n    # A vector of boolean indicating the status (UNDONE, SKIPPED or VALIDATED)\\n    # of the steps\\n    steps.status = NULL,\\n    # xxx\\n    reset = NULL,\\n    # A vector of boolean indicating if the steps are enabled or disabled\\n    steps.enabled = NULL\\n  )\\n\\n    rv.custom <- reactiveValues()\\n\\ndataOut <- reactiveValues(\\n                trigger = NULL,\\n                value = NULL\\n                )\\n\\n\\n\\nobserveEvent(reset(), {\\n    lapply(names(rv.widgets), function(x){\\n        rv.widgets[[x]] <- widgets.default.values[[x]]\\n    })\\n})\\n\\n\\n\\n\"  Get_Code_for_AddMod_observeEvents() #> [1] \"\\n\\nobserveEvent(reset(), {\\n    lapply(names(rv.widgets), function(x){\\n        rv.widgets[[x]] <- widgets.default.values[[x]]\\n    })\\n})\\n\\n\\n\""},{"path":"/reference/launch_app.html","id":null,"dir":"Reference","previous_headings":"","what":"xxxx — launch_app","title":"xxxx — launch_app","text":"xxxx","code":""},{"path":"/reference/launch_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xxxx — launch_app","text":"","code":"launch_app(mode = \"user\")"},{"path":"/reference/launch_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"xxxx — launch_app","text":"mode  `character(1)` indicates xxxx. Available values :  'user' (default) 'dev'.","code":""},{"path":"/reference/mod_bug_report.html","id":null,"dir":"Reference","previous_headings":"","what":"mod_bug_report_ui and mod_bug_report_server — mod_bug_report_ui","title":"mod_bug_report_ui and mod_bug_report_server — mod_bug_report_ui","text":"shiny Module.","code":""},{"path":"/reference/mod_bug_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mod_bug_report_ui and mod_bug_report_server — mod_bug_report_ui","text":"","code":"mod_bug_report_ui(id)  mod_bug_report_server(id)"},{"path":"/reference/mod_bug_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mod_bug_report_ui and mod_bug_report_server — mod_bug_report_ui","text":"id shiny id input internal output internal session internal","code":""},{"path":"/reference/mod_homepage.html","id":null,"dir":"Reference","previous_headings":"","what":"mod_homepage_ui and mod_homepage_server — mod_homepage_ui","title":"mod_homepage_ui and mod_homepage_server — mod_homepage_ui","text":"shiny Module.","code":""},{"path":"/reference/mod_homepage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mod_homepage_ui and mod_homepage_server — mod_homepage_ui","text":"","code":"mod_homepage_ui(id)  mod_homepage_server(id, file.md)"},{"path":"/reference/mod_homepage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mod_homepage_ui and mod_homepage_server — mod_homepage_ui","text":"id shiny id input internal output internal session internal","code":""},{"path":"/reference/mod_insert_md.html","id":null,"dir":"Reference","previous_headings":"","what":"mod_insert_md_ui and mod_insert_md_server — mod_insert_md_ui","title":"mod_insert_md_ui and mod_insert_md_server — mod_insert_md_ui","text":"shiny Module.","code":""},{"path":"/reference/mod_insert_md.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mod_insert_md_ui and mod_insert_md_server — mod_insert_md_ui","text":"","code":"mod_insert_md_ui(id)  mod_insert_md_server(id, url)"},{"path":"/reference/mod_insert_md.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mod_insert_md_ui and mod_insert_md_server — mod_insert_md_ui","text":"id shiny id input internal output internal session internal","code":""},{"path":"/reference/mod_loading_page.html","id":null,"dir":"Reference","previous_headings":"","what":"mod_loading_page_ui and mod_loading_page_server — mod_loading_page","title":"mod_loading_page_ui and mod_loading_page_server — mod_loading_page","text":"shiny Module.","code":""},{"path":"/reference/mod_loading_page.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mod_loading_page_ui and mod_loading_page_server — mod_loading_page","text":"","code":"mod_loading_page_ui(id)  mod_loading_page_server(id)"},{"path":"/reference/mod_loading_page.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mod_loading_page_ui and mod_loading_page_server — mod_loading_page","text":"id xxx input internal output internal session internal","code":""},{"path":[]},{"path":"/reference/popover_for_help.html","id":null,"dir":"Reference","previous_headings":"","what":"popover_for_help_ui and popover_for_help_server — popover_for_help_ui","title":"popover_for_help_ui and popover_for_help_server — popover_for_help_ui","text":"shiny Module. xxx","code":""},{"path":"/reference/popover_for_help.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"popover_for_help_ui and popover_for_help_server — popover_for_help_ui","text":"","code":"popover_for_help_ui(id)  popover_for_help_server(id, data)"},{"path":"/reference/popover_for_help.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"popover_for_help_ui and popover_for_help_server — popover_for_help_ui","text":"id xxx data xxx","code":""},{"path":"/reference/popover_for_help.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"popover_for_help_ui and popover_for_help_server — popover_for_help_ui","text":"xxx","code":""},{"path":"/reference/popover_for_help.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"popover_for_help_ui and popover_for_help_server — popover_for_help_ui","text":"","code":"if (interactive()) {     library(shiny)     library(shinyBS)     ui <- fluidPage(         popover_for_help_ui(\"Title\")     )     server <- function(input, output) {         popover_for_help_server(             id = \"Title\",             data = list(                 title = \"Test\",                 content = \"Test\"             )         )     }     shinyApp(ui, server) }"},{"path":"/reference/pull_fifo.html","id":null,"dir":"Reference","previous_headings":"","what":"Push item in a FIFO — pull_fifo","title":"Push item in a FIFO — pull_fifo","text":"Push item FIFO","code":""},{"path":"/reference/pull_fifo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Push item in a FIFO — pull_fifo","text":"","code":"pull_fifo(fifo)"},{"path":"/reference/pull_fifo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Push item in a FIFO — pull_fifo","text":"fifo `vector` strings","code":""},{"path":"/reference/pull_fifo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Push item in a FIFO — pull_fifo","text":"`list(2)` two items: * xxx * xxx","code":""},{"path":"/reference/push_fifo.html","id":null,"dir":"Reference","previous_headings":"","what":"Push item in a FIFO — push_fifo","title":"Push item in a FIFO — push_fifo","text":"Push item FIFO","code":""},{"path":"/reference/push_fifo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Push item in a FIFO — push_fifo","text":"","code":"push_fifo(fifo, value)"},{"path":"/reference/push_fifo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Push item in a FIFO — push_fifo","text":"fifo `vector` strings value string","code":""},{"path":"/reference/push_fifo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Push item in a FIFO — push_fifo","text":"`vector` strings","code":""},{"path":"/reference/toggleWidget.html","id":null,"dir":"Reference","previous_headings":"","what":"Hide/show a widget w.r.t a condition. — toggleWidget","title":"Hide/show a widget w.r.t a condition. — toggleWidget","text":"Wrapper toggleWidget function package `shinyjs`","code":""},{"path":"/reference/toggleWidget.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hide/show a widget w.r.t a condition. — toggleWidget","text":"","code":"toggleWidget(widget, condition)"},{"path":"/reference/toggleWidget.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hide/show a widget w.r.t a condition. — toggleWidget","text":"widget `Shiny` widget condition `logical(1)` hide/show widget.","code":""},{"path":"/reference/toggleWidget.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hide/show a widget w.r.t a condition. — toggleWidget","text":"NA","code":""},{"path":"/reference/toggleWidget.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Hide/show a widget w.r.t a condition. — toggleWidget","text":"Samuel Wieczorek","code":""},{"path":"/reference/toggleWidget.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hide/show a widget w.r.t a condition. — toggleWidget","text":"","code":"if (interactive()) {     ui <- shiny::fluidPage(uiOutput('foo'))          server <- function(input, output, session) {     wgt <- actionButton('foo_btn', 'foo')     output$foo <- renderUI({toggleWidget(wgt, FALSE)})          }     shiny::shinyApp(ui, server) }"},{"path":"/reference/write.excel.html","id":null,"dir":"Reference","previous_headings":"","what":"This function exports a single data.frame to a Excel file. — write.excel","title":"This function exports a single data.frame to a Excel file. — write.excel","text":"xxx","code":""},{"path":"/reference/write.excel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function exports a single data.frame to a Excel file. — write.excel","text":"","code":"write.excel(   df,   style = NULL,   tabname = \"foo\",   filename = NULL,   rownames = FALSE,   colnames = TRUE )"},{"path":"/reference/write.excel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function exports a single data.frame to a Excel file. — write.excel","text":"df data.frame style xxx tabname xxx filename character string name Excel rownames `logical(0)` xxx colnames `logical(0)` xxx","code":""},{"path":"/reference/write.excel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function exports a single data.frame to a Excel file. — write.excel","text":"Excel file (.xlsx)","code":""},{"path":"/reference/write.excel.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"This function exports a single data.frame to a Excel file. — write.excel","text":"Samuel Wieczorek","code":""},{"path":"/reference/write.excel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This function exports a single data.frame to a Excel file. — write.excel","text":"","code":"# Colorize the cells with missing values data(data_na) n <- nrow(data_na$array1)*ncol(data_na$array1) style <- data.frame(matrix(rep('lightgrey', n), nrow=nrow(data_na$array1))) style[is.na(data_na$array1)] <- 'orange' write.excel(data_na$array1, style, tabname = 'foo', filename = \"test\")"}]
