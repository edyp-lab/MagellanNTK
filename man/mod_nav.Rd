% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mod_nav.R
\name{mod_nav_ui}
\alias{mod_nav_ui}
\alias{mod_nav_server}
\title{The ui() function of the module `mod_nav`}
\usage{
mod_nav_ui(id)

mod_nav_server(
  id,
  dataIn = reactive({     NULL }),
  is.enabled = reactive({     TRUE }),
  remoteReset = reactive({     FALSE }),
  is.skipped = reactive({     FALSE }),
  tl.layout = NULL,
  verbose = FALSE
)
}
\arguments{
\item{id}{A `character(1)` which defines the id of the module. It is the same
as for the ui() function.}

\item{dataIn}{The dataset}

\item{is.enabled}{A `boolean`. This variable is a remote command to specify
if the corresponding module is enabled/disabled in the calling module of upper level.
For example, if this module is part of a pipeline and the pipeline calculates
that it is disabled (i.e. skipped), then this variable is set to TRUE. Then,
all the widgets will be disabled. If not, the enabling/disabling of widgets
is deciding by this module.}

\item{remoteReset}{It is a remote command to reset the module. A boolen that 
indicates is the pipeline has been reseted by a program of higher level
Basically, it is the program which has called this module}

\item{is.skipped}{xxx}

\item{tl.layout}{A vector of character ('h' for horizontal, 'v' for vertical)
where each item correspond to the orientation of the timeline for a given
level of navigation module.}

\item{verbose}{xxx}
}
\value{
A list of four items:
* dataOut xxx
* steps.enabled xxxxx
* status A vector of `integer(1)` of the same length than the config@steps
  vector
* reset xxxx
}
\description{
The module navigation can be launched via a Shiny app.
}
\examples{
\dontrun{
library(shiny)
library(shinyBS)
ui <- fluidPage(
  mod_nav_ui('Protein_Description')
)
server <- function(input, output){
  mod_nav_server(id = 'Protein_Description',
  dataIn = reactive({feat1})
  )
}
shinyApp(ui, server)
}

}
\author{
Samuel Wieczorek
}
