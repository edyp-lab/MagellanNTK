% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mod_timeline_h.R
\name{mod_timeline_h}
\alias{mod_timeline_h}
\alias{mod_timeline_h_ui}
\alias{mod_timeline_h_server}
\title{timeline UI Function}
\usage{
mod_timeline_h_ui(id)

mod_timeline_h_server(id, config, status, position, enabled)
}
\arguments{
\item{id}{The `id` of the module,}

\item{config}{A static `list` (not `reactiveList`) containing the same elements
as the process module.}

\item{status}{A `reactive vector` which contain the status (validated,
skipped or undone) of each step of the process module. Its length is equal
to the number of steps.}

\item{position}{A `reactive integer` that reflects the position of the
current (active) step.}

\item{enabled}{A `reactive vector` of length the number of steps and which
indicate whether the step is enabled or disabled.}
}
\value{
NA

NA
}
\description{
A shiny Module.

#'
}
\examples{
if (interactive()) {
    ui <- fluidPage(
        actionButton("changePos", "Change position"),
        mod_timeline_h_ui("TLh")
    )

    server <- function(input, output) {
        rv <- reactiveValues(
            status = c(0, 1, 0, 0),
            current.pos = 1,
            tl.tags.enabled = c(1, 1, 1, 1),
            position = NULL
        )
        config <- list(
            name = "Protein_Filtering",
            steps = c("Description", "Step1", "Step2", "Step3"),
            mandatory = c(TRUE, FALSE, TRUE, TRUE)
        )
        mod_timeline_h_server(
            id = "TLh",
            config = config,
            status = reactive({
                rv$status
            }),
            position = reactive({
                rv$current.pos
            }),
            enabled = reactive({
                rv$tl.tags.enabled
            })
        )
    }
    shinyApp(ui, server)
}

}
