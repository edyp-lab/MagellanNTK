% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mod_nav_pipeline.R
\name{mod_nav_pipeline_ui}
\alias{mod_nav_pipeline_ui}
\alias{mod_nav_pipeline_server}
\title{xxx}
\usage{
mod_nav_pipeline_ui(id)

mod_nav_pipeline_server(
  id,
  dataIn = reactive({     NULL }),
  is.enabled = reactive({     TRUE }),
  remoteReset = reactive({     FALSE }),
  is.skipped = reactive({     FALSE })
)
}
\arguments{
\item{id}{xxx}

\item{dataIn}{xxx}

\item{is.enabled}{xxx}

\item{remoteReset}{xxx}

\item{is.skipped}{xxx}
}
\value{
xxx
}
\description{
xxxxxx

xxxxxx

xxx
}
\section{Fields}{

\describe{
\item{\code{proc}}{contains the return value of the process module that has been called}

\item{\code{status}}{A booelan vector which contains the status (validated,
skipped or undone) of the steps}

\item{\code{dataIn}}{Contains the dataset passed by argument to the module server}

\item{\code{temp.dataIn}}{This variable is used to serves as a tampon between 
the input of the module and the functions.}

\item{\code{steps.enabled}}{Contains the value of the parameter 'is.enabled'}

\item{\code{current.pos}}{Stores the current cursor position in the timeline and 
indicates which of the process' steps is active



xxx}
}}

\examples{
\dontrun{
library(shiny)
library(shinyBS)
ui <- fluidPage(
  mod_nav_pipeline_ui('Protein')
)
server <- function(input, output){
mod_nav_pipeline_server(id = 'Protein',
                          dataIn = reactive({feat1})
  )
}
shinyApp(ui, server)
}

}
